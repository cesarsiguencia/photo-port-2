{"ast":null,"code":"var _jsxFileName = \"/Users/Cesar/Desktop/projects/photo-port-2/src/App.js\",\n    _s = $RefreshSig$();\n\n// // import './App.css';\n// import React, { useState } from 'react';\n// import About from './components/About'\n// import Nav from './components/Nav'\n// import Gallery from './components/Gallery';\n// function App() {\n//   // the initial array we will use for useState, it will be defined as the followinf\n// const [categories] = useState([\n//   {\n//     name: 'commercial',\n//     description: 'Photos of grocery stores, food trucks, and other commercial projects',\n//   },\n//   { name: 'portraits', description: 'Portraits of people in my life' },\n//   { name: 'food', description: 'Delicious delicacies' },\n//   { name: 'landscape', description: 'Fields, farmhouses, waterfalls, and the beauty of nature' },\n// ]);\n// const [currentCategory, setCurrentCategory] = useState(categories[0]); //to useState functions, the object needs to be defined, and then the function, we are going to have currentCategory be defined as our categories\n// return (\n//       // this is JSX, HTML represented in JS, this works due to webpack and React, react basically uses JSX as document.createElement()\n//   <div>\n//     <Nav\n//       categories={categories}\n//       setCurrentCategory={setCurrentCategory}\n//       currentCategory={currentCategory}\n//     ></Nav>\n//     <main>\n//       <div>\n//         <Gallery></Gallery>\n//         <About></About>\n//       </div>\n//     </main>\n//   </div>\n// );\n// }\n// export default App;\nimport React, { useState } from 'react';\nimport Nav from './components/Nav';\nimport About from './components/About';\nimport Gallery from './components/Gallery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //this hook was moved from the Nav component because Nav could not identify Gallery as a child, so this was moved to App.js, or lifting the state\n  const [categories] = useState([{\n    name: 'commercial',\n    description: 'Photos of grocery stores, food trucks, and other commercial projects'\n  }, {\n    name: 'portraits',\n    description: 'Portraits of people in my life'\n  }, {\n    name: 'food',\n    description: 'Delicious delicacies'\n  }, {\n    name: 'landscape',\n    description: 'Fields, farmhouses, waterfalls, and the beauty of nature'\n  }]);\n  const [currentCategory, setCurrentCategory] = useState(categories[0]); // this returns an array with our current value followed by what we want out second value to equal to (setCurrentCategory), we are passing our first object from our categories here\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      categories: categories,\n      setCurrentCategory: setCurrentCategory,\n      currentCategory: currentCategory // we are using props here, which are parameters passed as component attributes (ex, data-target), instead of parameters through generic functions. Now, the above hooks will be displayed\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Gallery, {\n          currentCategory: currentCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gAbgDP8ADPHpbTohe0/s+FM/LxQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Nav","About","Gallery","App","categories","name","description","currentCategory","setCurrentCategory"],"sources":["/Users/Cesar/Desktop/projects/photo-port-2/src/App.js"],"sourcesContent":["\n// // import './App.css';\n// import React, { useState } from 'react';\n// import About from './components/About'\n// import Nav from './components/Nav'\n// import Gallery from './components/Gallery';\n\n// function App() {\n//   // the initial array we will use for useState, it will be defined as the followinf\n// const [categories] = useState([\n//   {\n//     name: 'commercial',\n//     description: 'Photos of grocery stores, food trucks, and other commercial projects',\n//   },\n//   { name: 'portraits', description: 'Portraits of people in my life' },\n//   { name: 'food', description: 'Delicious delicacies' },\n//   { name: 'landscape', description: 'Fields, farmhouses, waterfalls, and the beauty of nature' },\n// ]);\n\n// const [currentCategory, setCurrentCategory] = useState(categories[0]); //to useState functions, the object needs to be defined, and then the function, we are going to have currentCategory be defined as our categories\n// return (\n//       // this is JSX, HTML represented in JS, this works due to webpack and React, react basically uses JSX as document.createElement()\n//   <div>\n//     <Nav\n//       categories={categories}\n//       setCurrentCategory={setCurrentCategory}\n//       currentCategory={currentCategory}\n//     ></Nav>\n//     <main>\n//       <div>\n//         <Gallery></Gallery>\n//         <About></About>\n//       </div>\n//     </main>\n//   </div>\n// );\n// }\n\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport Nav from './components/Nav';\nimport About from './components/About';\nimport Gallery from './components/Gallery';\n\nfunction App() {\n  //this hook was moved from the Nav component because Nav could not identify Gallery as a child, so this was moved to App.js, or lifting the state\n  const [categories] = useState([\n    {\n      name: 'commercial',\n      description: 'Photos of grocery stores, food trucks, and other commercial projects',\n    },\n    { name: 'portraits', description: 'Portraits of people in my life' },\n    { name: 'food', description: 'Delicious delicacies' },\n    { name: 'landscape', description: 'Fields, farmhouses, waterfalls, and the beauty of nature' },\n  ]);\n\n  const [currentCategory, setCurrentCategory] = useState(categories[0]); // this returns an array with our current value followed by what we want out second value to equal to (setCurrentCategory), we are passing our first object from our categories here\n\n  return (\n    <div>\n      <Nav\n        categories={categories}\n        setCurrentCategory={setCurrentCategory}\n        currentCategory={currentCategory}\n        // we are using props here, which are parameters passed as component attributes (ex, data-target), instead of parameters through generic functions. Now, the above hooks will be displayed\n      ></Nav>\n      <main>\n        <div>\n        <Gallery currentCategory={currentCategory}></Gallery>\n          <About></About>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA,MAAM,CAACC,UAAD,IAAeL,QAAQ,CAAC,CAC5B;IACEM,IAAI,EAAE,YADR;IAEEC,WAAW,EAAE;EAFf,CAD4B,EAK5B;IAAED,IAAI,EAAE,WAAR;IAAqBC,WAAW,EAAE;EAAlC,CAL4B,EAM5B;IAAED,IAAI,EAAE,MAAR;IAAgBC,WAAW,EAAE;EAA7B,CAN4B,EAO5B;IAAED,IAAI,EAAE,WAAR;IAAqBC,WAAW,EAAE;EAAlC,CAP4B,CAAD,CAA7B;EAUA,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAACK,UAAU,CAAC,CAAD,CAAX,CAAtD,CAZa,CAY0D;;EAEvE,oBACE;IAAA,wBACE,QAAC,GAAD;MACE,UAAU,EAAEA,UADd;MAEE,kBAAkB,EAAEI,kBAFtB;MAGE,eAAe,EAAED,eAHnB,CAIE;;IAJF;MAAA;MAAA;MAAA;IAAA,QADF,eAOE;MAAA,uBACE;QAAA,wBACA,QAAC,OAAD;UAAS,eAAe,EAAEA;QAA1B;UAAA;UAAA;UAAA;QAAA,QADA,eAEE,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;GA9BQJ,G;;KAAAA,G;AAgCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}